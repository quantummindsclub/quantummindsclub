@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%; /* white */
    --foreground: 0 0% 0%; /* black */

    --muted: 0 0% 95%; /* light gray */
    --muted-foreground: 0 0% 45%; /* darker gray */

    --popover: 0 0% 100%; /* white */
    --popover-foreground: 0 0% 0%; /* black */

    --card: 0 0% 100%; /* white */
    --card-foreground: 0 0% 0%; /* black */

    --border: 0 0% 85%; /* medium gray */
    --input: 0 0% 85%; /* medium gray */

    --primary: 0 0% 0%; /* black */
    --primary-foreground: 0 0% 100%; /* white */

    --secondary: 0 0% 90%; /* light gray */
    --secondary-foreground: 0 0% 0%; /* black */

    --accent: 0 0% 90%; /* light gray */
    --accent-foreground: 0 0% 0%; /* black */

    --destructive: 0 0% 0%; /* black */
    --destructive-foreground: 0 0% 100%; /* white */

    --ring: 0 0% 85%; /* medium gray */

    --radius: 0rem;

    /* Theme-specific border colors */
    --header-border: 0 0% 0%; /* black */
    --footer-border: 0 0% 0%; /* black */
    --card-border: 0 0% 0%; /* black */

    /* Custom scrollbar colors - light mode */
    --scrollbar-track: 0 0% 95%; /* very light gray */
    --scrollbar-thumb: 0 0% 65%; /* medium gray */
    --scrollbar-hover: 0 0% 50%; /* darker gray */

    /* Additional animations for accordion */
    --accordion-duration: 0.2s;
  }

  .dark {
    --background: 0 0% 0%; /* black */
    --foreground: 0 0% 100%; /* white */

    --muted: 0 0% 10%; /* dark gray */
    --muted-foreground: 0 0% 65%; /* lighter gray */

    --popover: 0 0% 10%; /* nearly black */
    --popover-foreground: 0 0% 90%; /* nearly white */

    --card: 0 0% 10%; /* nearly black */
    --card-foreground: 0 0% 90%; /* nearly white */

    --border: 0 0% 25%; /* gray */
    --input: 0 0% 25%; /* gray */

    --primary: 0 0% 100%; /* white */
    --primary-foreground: 0 0% 0%; /* black */

    --secondary: 0 0% 15%; /* dark gray */
    --secondary-foreground: 0 0% 100%; /* white */

    --accent: 0 0% 25%; /* gray */
    --accent-foreground: 0 0% 100%; /* white */

    --destructive: 0 0% 45%; /* medium gray */
    --destructive-foreground: 0 0% 100%; /* white */

    --ring: 0 0% 25%; /* gray */

    --radius: 0rem;

    /* Theme-specific border colors for dark mode */
    --header-border: 0 0% 100%; /* white */
    --footer-border: 0 0% 100%; /* white */
    --card-border: 0 0% 100%; /* white */

    /* Custom scrollbar colors - dark mode */
    --scrollbar-track: 0 0% 15%; /* dark gray */
    --scrollbar-thumb: 0 0% 35%; /* medium gray */
    --scrollbar-hover: 0 0% 45%; /* lighter gray */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    font-family: 'Space Mono', monospace;
    /* Restore scrolling for normal pages */
    overflow-y: auto;
    overflow-x: hidden;
  }
  
  /* Add padding bottom to account for fixed footer */
  html {
    scroll-padding-bottom: 4rem; 
    scroll-padding-top: 6rem; /* Add padding for fixed header */
    font-family: 'Space Mono', monospace;
    /* Enable smooth scrolling for hash navigation */
    scroll-behavior: smooth;
    /* Allow scrolling on html element */
    overflow-y: auto;
    overflow-x: hidden;
  }
  
  /* Only use smooth scrolling for hash navigation, not for page transitions */
  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }

  /* Remove the blanket hidden overflow and add specific classes for layouts */
  .admin-layout {
    height: 100vh;
    overflow: hidden;
  }

  /* Keep main layout scrollable */
  .main-layout {
    min-height: 100vh;
    overflow-y: auto;
    overflow-x: hidden;
    /* Add padding to account for fixed header */
    padding-top: 0rem;
  }

  /* Make scrollbar styling applicable only to elements that should scroll */
  .overflow-y-auto::-webkit-scrollbar,
  .overflow-y-scroll::-webkit-scrollbar,
  main::-webkit-scrollbar {
    width: 10px;
  }

  .overflow-y-auto::-webkit-scrollbar-track,
  .overflow-y-scroll::-webkit-scrollbar-track,
  main::-webkit-scrollbar-track {
    background: hsl(var(--scrollbar-track));
  }

  .overflow-y-auto::-webkit-scrollbar-thumb,
  .overflow-y-scroll::-webkit-scrollbar-thumb,
  main::-webkit-scrollbar-thumb {
    background: hsl(var(--scrollbar-thumb));
    border: none;
  }

  .overflow-y-auto::-webkit-scrollbar-thumb:hover,
  .overflow-y-scroll::-webkit-scrollbar-thumb:hover,
  main::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--scrollbar-hover));
  }

  /* Custom scrollbar styling */
  /* Webkit browsers (Chrome, Safari, newer versions of Opera) */
  ::-webkit-scrollbar {
    width: 10px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--scrollbar-track));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--scrollbar-thumb));
    border: none;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--scrollbar-hover));
  }

  /* Firefox */
  * {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--scrollbar-thumb)) hsl(var(--scrollbar-track));
  }

  /* Editor-specific scrollbars */
  .ProseMirror::-webkit-scrollbar {
    width: 8px;
  }

  .ProseMirror::-webkit-scrollbar-thumb {
    background: hsl(var(--scrollbar-thumb));
  }

  .ProseMirror::-webkit-scrollbar-track {
    background: hsl(var(--scrollbar-track));
  }

  /* Apply Space Mono to all elements with text */
  h1, h2, h3, h4, h5, h6, p, span, a, button, input, textarea, select, li, td, th {
    font-family: 'Space Mono', monospace;
  }

  /* Force code blocks to use Space Mono */
  code, pre, kbd {
    font-family: 'Space Mono', monospace !important;
  }

  /* Remove ReactQuill styles and add TipTap styles */
  .editor-container {
    position: relative;
    border: 1px solid hsl(var(--border));
    border-radius: 0; /* No rounded corners */
    font-family: 'Space Mono', monospace !important;
    overflow: hidden; /* Keep editor content within bounds */
    z-index: 5; /* Lower z-index than focused inputs */
    isolation: isolate;
  }

  /* TipTap content styles */
  .ProseMirror {
    min-height: 250px;
    max-height: 500px;
    overflow-y: auto;
    padding: 1rem;
    font-family: 'Space Mono', monospace !important;
    outline: none;
    cursor: text; /* Always show text cursor in editor area */
    z-index: auto; /* Reset z-index to follow stacking context */
  }

  /* Fix focus issues by ensuring the editor is always visible when active */
  .ProseMirror-focused {
    outline: none;
    box-shadow: 0 0 0 2px rgba(var(--ring), 0.3) inset;
  }

  /* Add styles for font sizes in the editor */
  .ProseMirror [style*="font-size: small"] {
    font-size: 0.875rem !important;
  }

  .ProseMirror [style*="font-size: medium"] {
    font-size: 1rem !important;
  }

  .ProseMirror [style*="font-size: large"] {
    font-size: 1.25rem !important;
  }

  .ProseMirror [style*="font-size: x-large"] {
    font-size: 1.5rem !important;
  }

  /* Font size styles for the rendered blog content */
  .blog-content [style*="font-size: small"] {
    font-size: 0.875rem !important;
  }

  .blog-content [style*="font-size: medium"] {
    font-size: 1rem !important;
  }

  .blog-content [style*="font-size: large"] {
    font-size: 1.25rem !important;
  }

  .blog-content [style*="font-size: x-large"] {
    font-size: 1.5rem !important;
  }

  /* TipTap placeholder */
  .ProseMirror p.is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }

  /* Ensure proper alignment styling for TipTap content */
  .ProseMirror .is-text-align-left {
    text-align: left;
  }

  .ProseMirror .is-text-align-center {
    text-align: center;
  }

  .ProseMirror .is-text-align-right {
    text-align: right;
  }

  .ProseMirror .is-text-align-justify {
    text-align: justify;
  }

  /* Style for images in editor */
  .ProseMirror img {
    max-width: 100%;
    max-height: 400px; /* Limit maximum height */
    height: auto;
    display: block;
    margin: 1rem auto;
    border-radius: 0;
    object-fit: contain; /* Maintain aspect ratio */
  }

  /* Remove all the ReactQuill specific styles */
  .ql-editor,
  .ql-container,
  .ql-toolbar,
  .quill {
    display: none !important; /* Hide any remnants of ReactQuill */
  }

  /* Blog post styling - keep these styles for content display */
  .prose {
    max-width: 100%;
    font-family: 'Space Mono', monospace !important;
  }

  .prose * {
    font-family: 'Space Mono', monospace !important;
  }

  .prose img {
    border-radius: 0; /* Changed to remove rounded corners */
  }

  /* Add this to fix image display issues */
  .blog-content img {
    max-width: 100%;
    max-height: 400px; /* Limit maximum height */
    height: auto;
    display: block;
    margin: 1rem auto;
    border-radius: 0; /* Changed to remove rounded corners */
    object-fit: contain; /* Maintain aspect ratio */
  }

  /* Create a container for images to maintain aspect ratio */
  .img-container {
    position: relative;
    max-width: 100%;
    margin: 1rem auto;
  }

  /* Make images fit properly in different screen sizes */
  @media (max-width: 768px) {
    .ProseMirror img,
    .prose img,
    .blog-content img {
      max-height: 300px; /* Smaller max height on smaller screens */
    }
  }

  /* Handle extra large images with a scrollable container if needed */
  .image-overflow {
    max-width: 100%;
    overflow-x: auto;
    margin: 1rem 0;
  }

  /* Improved image handling for editor and blog content */
  .ProseMirror img,
  .prose img,
  .blog-content img {
    max-width: 100%;
    max-height: 400px; /* Limit maximum height to prevent oversized images */
    height: auto;
    display: block;
    margin: 1rem auto;
    border-radius: 0;
    object-fit: contain; /* Maintain aspect ratio */
  }

  /* Create responsive image container to maintain proper size */
  .image-container {
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: 100%;
    margin: 1rem auto;
    overflow: hidden;
  }

  /* Fix for Cloudinary responsive images */
  img.cld-responsive {
    width: 100%;
    height: auto;
    max-height: 400px;
    object-fit: contain;
  }

  /* Create responsive image container to maintain proper size */
  .image-container {
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: 100%;
    margin: 1rem auto;
    overflow: hidden;
  }

  /* Specific blog view tweaks */
  .blog-content {
    overflow-x: hidden; /* Prevent horizontal scroll from oversized images */
  }

  .blog-content img {
    max-width: 100%;
    max-height: 400px;
    height: auto;
    object-fit: contain;
  }

  /* Fix for extremely large images */
  @media (max-width: 768px) {
    .ProseMirror img,
    .prose img,
    .blog-content img {
      max-height: 300px; /* Smaller max-height on smaller screens */
    }
  }

  /* Improve focus styling for inputs to make it more obvious which element has focus */
  input:focus, 
  textarea:focus {
    outline: 2px solid hsl(var(--ring));
    outline-offset: -1px;
    z-index: 20; /* Ensure focused inputs appear above other elements */
  }

  /* Prevent the editor from capturing events when it doesn't have focus */
  .ProseMirror:not(:focus) {
    pointer-events: none;
  }

  /* Re-enable pointer events when actually hovering the editor */
  .editor-container:hover .ProseMirror:not(:focus) {
    pointer-events: auto;
  }

  /* Additional styling for new formatting options */
  .ProseMirror a {
    color: hsl(var(--primary));
    text-decoration: underline;
    text-underline-offset: 4px;
  }

  /* Style for underlined text */
  .ProseMirror u {
    text-decoration: underline;
  }

  /* Style for strikethrough text */
  .ProseMirror s {
    text-decoration: line-through;
  }

  /* Style for links in the blog content */
  .blog-content a {
    color: hsl(var(--primary));
    text-decoration: underline;
    text-underline-offset: 4px;
  }

  .blog-content a:hover {
    color: hsl(var(--primary)/0.8);
  }

  /* Make sure links are properly visible in dark mode */
  .dark .ProseMirror a,
  .dark .blog-content a {
    color: hsl(var(--primary));
    opacity: 1;
  }

  /* Additional styling for the link dialog */
  .link-dialog-input {
    width: 100%;
    margin-bottom: 0.5rem;
  }

  /* Fix for dialog positioning */
  [role="dialog"] {
    z-index: 100;
  }

  /* Navigation menu styles */
  header nav button {
    @apply transition-none;
  }
  
  /* Hamburger menu styles */
  .nav-menu {
    @apply border-t border-header-border transform transition-transform duration-200;
  }
  
  /* Navigation link styles */
  .nav-menu a {
    @apply font-mono text-foreground hover:text-primary transition-none;
    font-family: 'Space Mono', monospace !important;
  }
  
  /* Full-width navigation menu styles - fixed to align perfectly with borders */
  header .container ul.divide-y {
    margin: 0;
    width: 100%; /* Use exact 100% width */
    padding: 0;
  }

  header .container ul.divide-y li {
    margin: 0;
    padding: 0;
    width: 100%;
    display: block;
  }

  header .container ul.divide-y li a {
    padding-left: 16px;
    padding-right: 16px;
    margin: 0;
    width: 100%;
    display: block;
  }

  /* Remove negative margins that might be causing overflow */
  header .absolute > .container {
    max-width: 100%;
    padding: 0;
    margin-left: auto;
    margin-right: auto;
  }

  /* Ensure hover effect is contained within borders */
  header .container ul.divide-y li a:hover {
    background-color: hsl(var(--muted));
  }

  /* Remove container specific overrides that might be causing the issue */
  @media (min-width: 640px) {
    header .absolute > .container {
      padding-left: 0;
      padding-right: 0;
      max-width: none;
      width: 100%;
    }
  }

  /* Force container to fill width in dropdown menu */
  header .absolute > .container {
    max-width: 100%;
    padding: 0;
  }

  /* Remove any container padding in navigation */
  @media (min-width: 640px) {
    header .absolute > .container {
      padding-left: 0;
      padding-right: 0;
      max-width: 100%;
    }
  }

  /* Remove any margin/padding that might be affecting the container */
  .nav-container {
    padding-left: 0;
    padding-right: 0;
  }

  /* Additional responsive adjustments for header */
  @media (max-width: 640px) {
    .container.header-container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }

  /* Comment section styling integration - updated for subtle separation */
  .post-comments {
    margin-top: 3rem;
    position: relative;
    padding-top: 2rem;
  }

  .post-comments::before {
    content: '';
    display: block;
    height: 1px;
    width: 100%;
    background-color: hsl(var(--border));
    position: absolute;
    top: 0;
    left: 0;
  }

  /* Comment section title styling */
  .post-comments h2 {
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    position: relative;
    display: inline-block;
  }

  /* Comment form styling - updated for better integration */
  .post-comments form {
    background-color: hsl(var(--secondary)/0.15);
    border: 1px solid hsl(var(--border));
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  /* Comment list header styling */
  .post-comments h3 {
    color: hsl(var(--muted-foreground));
    font-size: 0.95rem;
    margin-bottom: 2rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid hsl(var(--border)/0.7);
  }

  /* Individual comment styling */
  .post-comments .space-y-8 > div {
    position: relative;
    padding-left: 0.5rem;
  }

  /* Add a subtle left border to each comment */
  .post-comments .space-y-8 > div::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 2px;
    background-color: hsl(var(--secondary));
  }

  /* Comment author name styling */
  .post-comments h4.font-medium {
    color: hsl(var(--foreground));
    font-weight: 600;
  }

  /* Comment content styling */
  .post-comments .whitespace-pre-wrap {
    line-height: 1.6;
    color: hsl(var(--foreground)/0.85);
    font-size: 0.95rem;
  }

  /* Style the fixed header to ensure proper appearance */
  header.fixed {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    width: 100%;
    z-index: 50;
  }

  /* Custom styling to enhance the Quantum Minds aesthetic */
  .hero-overlay {
    background-color: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(1px);
  }

  .tech-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .tech-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  /* Image gallery hover effects */
  .image-gallery-item {
    overflow: hidden;
    position: relative;
  }

  .image-gallery-item img {
    transition: transform 0.5s ease;
  }

  .image-gallery-item:hover img {
    transform: scale(1.05);
  }

  /* Blog card animations */
  .blog-card {
    transition: transform 0.3s ease;
  }

  .blog-card:hover {
    transform: translateY(-3px);
  }

  /* Custom styling for accordion */
  .custom-accordion {
    border-radius: 0;
    border: 1px solid hsl(var(--border));
  }

  .custom-accordion-trigger {
    transition: background-color 0.2s ease;
  }

  .custom-accordion-trigger:hover {
    background-color: hsl(var(--muted));
  }

  /* Fix for hero section background to be full width */
  .hero-section {
    position: relative;
    width: 100%;
    overflow: hidden;
    margin-top: -2rem;
    margin-bottom: 4rem;
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    height: 100%;
  }

  .hero-background-image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  /* Fix for hero section background to be fixed */
  .fixed-hero-bg {
    position: absolute;
    top: 0;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    width: 100vw;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  /* Ensure the fixed hero background spans the full width */
  @media (min-width: 1400px) {
    .fixed-hero-bg::before {
      content: '';
      position: absolute;
      top: 0;
      left: 50%;
      right: 0;
      bottom: 0;
      width: 100vw;
      height: 100%;
      transform: translateX(-50%);
      z-index: -1;
    }
  }

  /* Ensure content on top of hero has proper z-index */
  .relative {
    position: relative;
    z-index: 1;
  }

  /* Fix for iOS where background-attachment: fixed doesn't work properly */
  @supports (-webkit-touch-callout: none) {
    .fixed-hero-bg div {
      background-attachment: scroll; /* Use scroll instead of fixed on iOS */
      width: 100vw;
    }
  }

  /* Fix margin issues with container */
  .container {
    position: relative;
    z-index: 10;
  }

  /* Full-width background sections */
  .full-width-section {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
  }

  /* Carousel styles */
  .carousel-container {
    width: 100%;
    position: relative;
    overflow: hidden;
    margin: 0 auto;
  }

  .carousel-track {
    display: flex;
    width: 100%;
  }

  .carousel-slide {
    width: 100%;
    flex-shrink: 0;
  }

  /* Improved carousel navigation */
  .carousel-nav {
    display: flex;
    justify-content: space-between;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
    z-index: 2;
  }

  .carousel-button {
    background: rgba(0, 0, 0, 0.3);
    color: white;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.3s;
  }

  .carousel-button:hover {
    opacity: 1;
  }

  /* Carousel indicators styling */
  .carousel-indicators {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
    gap: 0.5rem;
  }

  .carousel-indicator {
    width: 8px;
    height: 8px;
    border-radius: 0;
    background: hsla(var(--muted-foreground), 0.3);
    transition: background-color 0.3s;
  }

  .carousel-indicator.active {
    background: hsl(var(--primary));
  }
}

/* Theme-specific header and footer borders */
header {
  border-bottom: 1px solid hsl(var(--header-border) / 0.8) !important;
}

header .absolute.left-0.right-0.top-16 {
  border-left: none !important;
  border-right: none !important;
  border-top: 1px solid hsl(var(--card-border) / 0.8) !important;
  border-bottom: 1px solid hsl(var(--card-border) / 0.8) !important;
}

footer {
  position: relative;
  z-index: 20; /* Higher than content area */
  border-top: 1px solid hsl(var(--footer-border) / 0.8) !important;
  background-color: hsl(var(--background)); /* Make sure it has a background */
}

/* Card border styling */
.border-card-border {
  border: 1px solid hsl(var(--card-border) / 0.8) !important;
}

/* Add specific card styling for manage pages */
.manage-card {
  border: 1px solid hsl(var(--card-border) / 0.8) !important;
  background-color: hsl(var(--background));
}

/* Make the manage card borders more visible */
.dark .manage-card {
  border: 1px solid hsl(var(--card-border) / 0.8) !important; /* White in dark mode */
}

:root:not(.dark) .manage-card {
  border: 1px solid hsl(var(--card-border) / 0.8) !important; /* Black in light mode */
}

/* Remove rounded corners from all cards and blog elements */
.group, button, .btn, input, a.bg-primary, .inline-flex {
  border-radius: 0 !important;
}

/* Editor styles */
.editor-container {
  border: 1px solid hsl(var(--border));
  border-radius: 0; /* Changed to remove rounded corners */
  z-index: 5; /* Lower z-index than focused inputs */
  isolation: isolate;
}

.editor-container .quill {
  display: flex;
  flex-direction: column;
}

.min-h-\[300px\] .ql-container {
  min-height: 250px;
  height: auto;
}

.ql-editor {
  min-height: 250px;
  max-height: 500px;
  overflow-y: auto;
  font-family: 'Space Mono', monospace !important;
}

/* Fix ReactQuill typography */
.ql-editor p, 
.ql-editor h1,
.ql-editor h2,
.ql-editor h3,
.ql-editor h4,
.ql-editor h5,
.ql-editor h6,
.ql-editor ul,
.ql-editor ol,
.ql-editor li,
.ql-editor blockquote,
.ql-editor pre {
  font-family: 'Space Mono', monospace !important;
}

/* Fix toolbar visibility */
.ql-toolbar.ql-snow {
  border-top-left-radius: 0; /* Changed to remove rounded corners */
  border-top-right-radius: 0; /* Changed to remove rounded corners */
  border-bottom: none !important;
  border-color: hsl(var(--border));
  font-family: 'Space Mono', monospace !important;
  background-color: hsl(var(--secondary)); /* Add grey background to toolbar */
  padding: 8px;  /* Add some padding for better spacing */
}

.ql-container.ql-snow {
  border-bottom-left-radius: 0; /* Changed to remove rounded corners */
  border-bottom-right-radius: 0; /* Changed to remove rounded corners */
  border-color: hsl(var(--border));
  height: auto;
  font-family: 'Space Mono', monospace !important;
}

/* Image styling in editor and blog content */
.ql-editor img, .prose img {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 1rem 0;
  border-radius: 0; /* Changed to remove rounded corners */
}

/* Blog post styling */
.prose {
  max-width: 100%;
  font-family: 'Space Mono', monospace !important;
}

.prose * {
  font-family: 'Space Mono', monospace !important;
}

.prose img {
  border-radius: 0; /* Changed to remove rounded corners */
}

/* Add this to fix image display issues */
.blog-content img {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 1rem auto;
  border-radius: 0; /* Changed to remove rounded corners */
}

/* Fix ReactQuill image display */
.ql-editor p img,
.blog-content p img {
  display: block !important;
  margin: 1rem auto !important;
  max-width: 100% !important;
}

/* Remove rounded corners from badges and tags */
span[class*="rounded-md"], 
button[class*="rounded-md"],
div[class*="rounded-md"],
a[class*="rounded-md"] {
  border-radius: 0 !important;
}

/* Featured badge styles - removing rounded corners */
.inline-flex {
  border-radius: 0 !important;
}

/* Add these rules to handle text alignment in blog content */
.blog-content p[style*="text-align: center"],
.blog-content h1[style*="text-align: center"],
.blog-content h2[style*="text-align: center"],
.blog-content h3[style*="text-align: center"],
.blog-content h4[style*="text-align: center"],
.blog-content h5[style*="text-align: center"],
.blog-content h6[style*="text-align: center"],
.blog-content ul[style*="text-align: center"],
.blog-content ol[style*="text-align: center"] {
  text-align: center;
}

.blog-content p[style*="text-align: right"],
.blog-content h1[style*="text-align: right"],
.blog-content h2[style*="text-align: right"],
.blog-content h3[style*="text-align: right"],
.blog-content h4[style*="text-align: right"],
.blog-content h5[style*="text-align: right"],
.blog-content h6[style*="text-align: right"],
.blog-content ul[style*="text-align: right"],
.blog-content ol[style*="text-align: right"] {
  text-align: right;
}

.blog-content p[style*="text-align: justify"],
.blog-content h1[style*="text-align: justify"],
.blog-content h2[style*="text-align: justify"],
.blog-content h3[style*="text-align: justify"],
.blog-content h4[style*="text-align: justify"],
.blog-content h5[style*="text-align: justify"],
.blog-content h6[style*="text-align: justify"],
.blog-content ul[style*="text-align: justify"],
.blog-content ol[style*="text-align: justify"] {
  text-align: justify;
}

.blog-content .is-text-align-center {
  text-align: center;
}

.blog-content .is-text-align-right {
  text-align: right;
}

.blog-content .is-text-align-justify {
  text-align: justify;
}

/* Ensure alignment classes from ReactQuill are honored */
.blog-content .ql-align-center {
  text-align: center;
}

.blog-content .ql-align-right {
  text-align: right;
}

.blog-content .ql-align-justify {
  text-align: justify;
}

/* Replace colored featured badge with black and white version */
span[class*="bg-blue-50"],
span[class*="bg-blue-900"] {
  @apply bg-secondary text-foreground;
}

/* Adjust for dark mode */
.dark .ql-toolbar.ql-snow,
.dark .ql-container.ql-snow {
  border-color: hsl(var(--border));
}

.dark .ql-toolbar.ql-snow {
  background-color: hsl(var(--secondary)); /* Ensure background in dark mode */
}

.dark .ql-toolbar.ql-snow .ql-picker-label,
.dark .ql-toolbar.ql-snow .ql-picker-options,
.dark .ql-toolbar.ql-snow button {
  color: hsl(var(--foreground));
}

.dark .ql-snow .ql-stroke {
  stroke: hsl(var(--foreground));
}

.dark .ql-snow .ql-fill {
  fill: hsl(var(--foreground));
}

.dark .ql-editor.ql-blank::before {
  color: hsl(var(--muted-foreground));
}

/* Fix ReactQuill dropdown text color in dark mode */
.dark .ql-snow .ql-picker {
  color: hsl(var(--foreground));
}

.dark .ql-snow .ql-picker-options {
  background-color: hsl(var(--background));
  border-color: hsl(var(--border));
}

.dark .ql-snow .ql-picker.ql-expanded .ql-picker-label,
.dark .ql-snow .ql-picker.ql-expanded .ql-picker-options {
  color: hsl(var(--foreground));
  border-color: hsl(var(--border));
}

/* Fix for text size dropdown in dark mode */
.dark .ql-snow .ql-picker.ql-size .ql-picker-label::before,
.dark .ql-snow .ql-picker.ql-size .ql-picker-item::before {
  color: hsl(var(--foreground)) !important;
}

/* Fix for text alignment dropdown in dark mode */
.dark .ql-snow .ql-picker.ql-header .ql-picker-label::before,
.dark .ql-snow .ql-picker.ql-header .ql-picker-item::before {
  color: hsl(var(--foreground)) !important;
}

/* Fix all picker items in dark mode for better visibility */
.dark .ql-snow .ql-picker-item {
  color: hsl(var(--foreground));
}

/* Fix active state of picker items */
.dark .ql-snow .ql-picker-item.ql-selected,
.dark .ql-snow .ql-picker-item:hover {
  color: hsl(var(--primary));
}

/* Fix dropdown arrow color */
.dark .ql-snow .ql-picker-label::before {
  color: hsl(var(--foreground));
}

/* Responsive utilities for small screens */
@media (max-width: 360px) {
  /* Make buttons more compact on very small screens */
  .btn-container button {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
  
  /* Ensure page content doesn't overflow on tiny screens */
  .container {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}

/* Add word-break for long titles in cards */
h3, .card-title {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
}

/* Ensure action buttons have minimum width on small screens */
@media (max-width: 640px) {
  .action-buttons-container {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  
  .action-button {
    justify-content: center;
  }
  
  /* Improved mobile button text handling */
  .button-text-mobile {
    max-width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }
  
  /* Prevent text wrapping in buttons that should stay in one line */
  .no-wrap-button {
    white-space: nowrap;
  }
}

/* Make badges wrap properly */
.badge-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
}

/* Enhanced spacing for navigation items */
@layer utilities {
  .nav-spacing > * + * {
    margin-left: 0.75rem;
  }

  /* Footer social link styles - remove transition */
  .social-link {
    @apply p-2 rounded-full;
  }

  /* Full-width utility for hero sections and other elements that need to extend edge-to-edge */
  .full-width-hero {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    overflow-x: hidden;
    overflow-y: visible;
  }
  
  /* Ensure hero background covers entire viewport width */
  .full-width-hero > div:first-child {
    width: 100vw !important;
    left: 0 !important;
    right: 0 !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }

  /* Fix for mobile browsers that have issues with vw calculations */
  @supports (-webkit-touch-callout: none) {
    .full-width-hero,
    .full-width-hero > div:first-child,
    .full-width-hero > div:first-child > div {
      width: 100vw !important;
    }
  }
}

/* Remove hover effect from nav buttons */
header nav button {
  @apply transition-none;
}

/* Footer icon styles - remove transition */
footer a {
  @apply transition-none;
}

/* Specific color handling for social icons in light/dark mode */
footer a svg {
  @apply text-foreground; /* Use the theme's foreground color */
}

/* Dark mode specific styling for footer icons if needed */
.dark footer a svg {
  @apply text-foreground; /* Will use the dark theme foreground color */
}

/* Light mode specific styling for footer icons if needed */
:root:not(.dark) footer a svg {
  @apply text-foreground; /* Will use the light theme foreground color */
}

/* Additional responsive spacing adjustments */
@media (max-width: 640px) {
  header nav {
    gap: 0.5rem;
  }
}

@media (min-width: 640px) and (max-width: 768px) {
  header nav {
    gap: 0.75rem;
  }
}

@media (min-width: 768px) {
  header nav {
    gap: 1rem;
  }
}

/* Remove all transitions and animations from card components */
.group {
  transition: none !important;
}

a, button, .group * {
  transition: none !important;
}

/* Disable hover effects on links within cards */
.group a:hover {
  text-decoration: none !important;
  color: inherit !important;
}

/* Login card specific styling */
.login-card {
  border-width: 1px;
  border-style: solid;
}

/* Black border in light mode */
:root:not(.dark) .login-card {
  border-color: hsl(var(--header-border) / 1) !important; /* Black in light mode */
}

/* White border in dark mode */
.dark .login-card {
  border-color: hsl(var(--header-border) / 1) !important; /* White in dark mode */
}

/* Editor toolbar improvements */
.editor-container .ProseMirror {
  z-index: 1;
}

.editor-container .ProseMirror:focus {
  outline: none;
}

/* Make sure the toolbar doesn't steal focus */
.editor-container .flex.flex-wrap {
  user-select: none;
  position: sticky;
  top: 0;
  z-index: 15;
  background-color: hsl(var(--secondary));
}

/* Prevent text selection in toolbar buttons */
.editor-container button,
.editor-container .font-size-dropdown,
.editor-container .alignment-dropdown {
  user-select: none;
}

/* Make sure dropdowns are properly layered */
.font-size-dropdown .absolute,
.alignment-dropdown .absolute {
  z-index: 100;
}

/* Make cursor behavior consistent */
.ProseMirror {
  cursor: text;
}

/* Make sure the main content area doesn't overlap footer */
main {
  position: relative;
  z-index: 10;
  min-height: calc(100vh - 150px); /* Adjust based on header/footer height */
  padding-bottom: 3rem; /* Add extra padding at the bottom */
}

/* Style the tabs to match our minimalist theme */
.tabs-list {
  border: 1px solid hsl(var(--card-border) / 0.8) !important;
  background-color: hsl(var(--secondary)) !important;
}

/* Remove rounded corners from tabs */
[role="tablist"],
[role="tab"],
[data-state="active"],
[data-state="inactive"] {
  border-radius: 0 !important;
}

/* Make tab dividers more visible */
[role="tablist"] [role="tab"] + [role="tab"] {
  border-left: 1px solid hsl(var(--border)) !important;
}

/* Style the active tab */
[role="tablist"] [data-state="active"] {
  background-color: hsl(var(--background));
  border-bottom: 2px solid hsl(var(--foreground));
  font-weight: bold;
}

/* Post card image styling */
.group .aspect-video {
  height: 180px; /* Fixed height for blog card images */
}

.group .aspect-video img {
  transition: none !important; /* Maintain the no-transition policy */
}

/* Ensure proper image display in cards */
.group img {
  border-radius: 0 !important;
  object-fit: cover;
}

/* Add spacing between image and content */
.group .aspect-video + div {
  padding-top: 0.75rem;
}

/* Additional responsive adjustments */
@media (max-width: 640px) {
  .responsive-container {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

/* Hero section button styles */
.hero-button-primary {
  background-color: white !important;
  color: black !important;
  border: 2px solid white !important;
}

.hero-button-primary:hover {
  background-color: rgba(255, 255, 255, 0.9) !important;
}

.hero-button-outline {
  background-color: transparent !important;
  color: white !important;
  border: 2px solid white !important;
}

.hero-button-outline:hover {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

/* Override any theme-specific styling for hero section buttons */
.dark .hero-button-primary,
:root:not(.dark) .hero-button-primary {
  background-color: white !important;
  color: black !important;
}

.dark .hero-button-outline,
:root:not(.dark) .hero-button-outline {
  background-color: transparent !important;
  color: white !important;
}

/* Turnstile captcha widget styling */
.captcha-container {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  border: none !important;
  max-width: 100%;
  overflow: visible;
}

.turnstile-widget {
  width: 100%;
  font-family: 'Space Mono', monospace !important;
}

/* Remove rounded corners from Turnstile iframe */
.captcha-container iframe {
  border-radius: 0 !important;
  border: 1px solid hsl(var(--border)) !important;
  background-color: hsl(var(--background));
}

/* Make sure Turnstile container respects theme */
.dark .captcha-container iframe {
  background-color: hsl(var(--card));
  border-color: hsl(var(--border)) !important;
}

/* Fix for Turnstile in different viewport sizes */
@media (max-width: 360px) {
  .captcha-container {
    transform: scale(0.9);
    transform-origin: center;
  }
}
